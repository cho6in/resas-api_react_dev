{"ast":null,"code":"import _toConsumableArray from \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/src/App.js\";\nimport React, { Component } from 'react';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      selected_pref: Array(47).fill(false),\n      prefectures: {},\n      series: []\n    };\n    _this.changePrefSelect = _this.changePrefSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://opendata.resas-portal.go.jp/api/v1/prefectures', {\n        headers: {\n          'X-API-KEY': 'F6NJ8KWjjnpTzkk47savZg1USOSc1d6EQV3FStlJ'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        _this2.setState({\n          prefectures: res.result\n        });\n      });\n    }\n  }, {\n    key: \"changePrefSelect\",\n    value: function changePrefSelect(index) {\n      var _this3 = this;\n\n      var selectedWrap = this.state.selected_pref.slice();\n      selectedWrap[index] = !selectedWrap[index];\n\n      if (!this.state.selected_pref[index]) {\n        fetch(\"https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=-&prefCode=\".concat(index + 1), {\n          headers: {\n            'X-API-KEY': 'F6NJ8KWjjnpTzkk47savZg1USOSc1d6EQV3FStlJ'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (res) {\n          var humanCount = [];\n          Object.keys(res.result.data[0].data).forEach(function (i) {\n            humanCount.push(res.result.data[0].data[i].value);\n          });\n          var resSeries = {\n            name: _this3.state.prefectures[index].prefName,\n            data: humanCount\n          };\n\n          _this3.setState({\n            selected_pref: selectedWrap,\n            series: [].concat(_toConsumableArray(_this3.state.series), [resSeries])\n          });\n        });\n      } else {\n        var series_copy = this.state.series.slice();\n\n        for (var i = 0; i < series_copy.length; i++) {\n          if (series_copy[i].name == this.state.prefectures[index].prefName) {\n            series_copy.splice(i, 1);\n          }\n        }\n\n        this.setState({\n          selected_pref: selectedWrap,\n          series: series_copy\n        });\n      }\n    }\n  }, {\n    key: \"renderElem\",\n    value: function renderElem(props) {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        class: \"chkbox\",\n        key: props.prefCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: props.prefCode - 1,\n        type: \"checkbox\",\n        checked: this.state.selected_pref[props.prefCode - 1],\n        onChange: function onChange() {\n          return _this4.changePrefSelect(props.prefCode - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: props.prefCode - 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, props.prefName));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var prefObj = this.state.prefectures;\n      var chartOptions = {\n        title: {\n          text: '都道府県別人口推移'\n        },\n        yAxis: {\n          title: {\n            text: '人口数'\n          }\n        },\n        plotOptions: {\n          series: {\n            pointInterval: 5,\n            pointStart: 1960\n          }\n        },\n        legend: {\n          layout: 'vertical',\n          align: 'right',\n          verticalAlign: 'middle'\n        },\n        series: this.state.series\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Population Trends in japan\"), React.createElement(\"h2\", {\n        class: \"subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\u90FD\\u9053\\u5E9C\\u770C\"), React.createElement(\"div\", {\n        class: \"chkboxWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, Object.keys(prefObj).map(function (i) {\n        return _this5.renderElem(prefObj[i]);\n      })), React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        options: chartOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/chobin/Desktop/node.js/resas-react-project/resas-react-prj/src/App.js"],"names":["React","Component","HighchartsReact","Highcharts","App","state","selected_pref","Array","fill","prefectures","series","changePrefSelect","bind","fetch","headers","then","response","json","res","setState","result","index","selectedWrap","slice","humanCount","Object","keys","data","forEach","i","push","value","resSeries","name","prefName","series_copy","length","splice","props","prefCode","prefObj","chartOptions","title","text","yAxis","plotOptions","pointInterval","pointStart","legend","layout","align","verticalAlign","map","renderElem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selected_pref: Array(47).fill(false),\n      prefectures: {},\n      series: []\n    };\n    this.changePrefSelect = this.changePrefSelect.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://opendata.resas-portal.go.jp/api/v1/prefectures', {\n      headers: { 'X-API-KEY': 'F6NJ8KWjjnpTzkk47savZg1USOSc1d6EQV3FStlJ' }\n    })\n      .then(response => response.json())\n      .then(res => {\n        this.setState({ prefectures: res.result });\n      });\n  }\n\n  changePrefSelect(index) {\n    const selectedWrap = this.state.selected_pref.slice();\n    selectedWrap[index] = !selectedWrap[index];\n\n    if (!this.state.selected_pref[index]) {\n      fetch(\n        `https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=-&prefCode=${index +\n          1}`,\n        {\n          headers: { 'X-API-KEY': 'F6NJ8KWjjnpTzkk47savZg1USOSc1d6EQV3FStlJ' }\n        }\n      )\n        .then(response => response.json())\n        .then(res => {\n          let humanCount = [];\n          Object.keys(res.result.data[0].data).forEach(i => {\n            humanCount.push(res.result.data[0].data[i].value);\n          });\n          const resSeries = {\n            name: this.state.prefectures[index].prefName,\n            data: humanCount\n          };\n          this.setState({\n            selected_pref: selectedWrap,\n            series: [...this.state.series, resSeries]\n          });\n        });\n    } else {\n      const series_copy = this.state.series.slice();\n      for (let i = 0; i < series_copy.length; i++) {\n        if (series_copy[i].name == this.state.prefectures[index].prefName) {\n          series_copy.splice(i, 1);\n        }\n      }\n      this.setState({\n        selected_pref: selectedWrap,\n        series: series_copy\n      });\n    }\n  }\n\n  renderElem(props) {\n    return (\n      <div class=\"chkbox\" key={props.prefCode}>\n        <input id={props.prefCode - 1} type=\"checkbox\" checked={this.state.selected_pref[props.prefCode - 1]}  onChange={() => this.changePrefSelect(props.prefCode - 1)} />\n        <label for={props.prefCode - 1}>{props.prefName}</label>\n      </div>\n    );\n  }\n\n  render() {\n    const prefObj = this.state.prefectures;\n    const chartOptions = {\n      title: {\n          text: '都道府県別人口推移'\n      },\n      yAxis: {\n        title: {\n          text: '人口数',\n        }\n      },\n      plotOptions: {\n        series: {\n          pointInterval: 5,\n          pointStart: 1960\n        }\n      },\n      legend: {\n          layout: 'vertical',\n          align: 'right',\n          verticalAlign: 'middle'\n      },\n      series: this.state.series\n    };\n\n    return (\n      <div>\n        <h1 class=\"title\">Population Trends in japan</h1>\n        <h2 class=\"subtitle\">都道府県</h2>\n        <div class=\"chkboxWrap\">{Object.keys(prefObj)\n          .map(i => this.renderElem(prefObj[i]))}</div>\n        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}